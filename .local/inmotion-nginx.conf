# API SERVER
server {
  listen 443 ssl;
  server_name api.inmotion.dev;
  client_max_body_size 0;

  ssl_certificate /etc/nginx/certs/inmotion.dev.crt;
  ssl_certificate_key /etc/nginx/certs/inmotion.dev.key;
  ssl_session_cache shared:SSL:10m;

  location / {
    proxy_pass http://host.docker.internal:5004;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
    proxy_redirect http:// https://;
  }
}

# FRONTEND
server {
  listen 443 ssl;
  server_name inmotion.dev;
  client_max_body_size 0;

  ssl_certificate /etc/nginx/certs/inmotion.dev.crt;
  ssl_certificate_key /etc/nginx/certs/inmotion.dev.key;
  ssl_session_cache shared:SSL:10m;

  location / {
    proxy_pass http://host.docker.internal:3000;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
    proxy_redirect http:// https://;
  }

  location /client/ {
    proxy_pass http://host.docker.internal:3000;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
    proxy_redirect http:// https://;
  }

  location /static/ {
    proxy_pass http://host.docker.internal:3000;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
    proxy_redirect http:// https://;
  }

  location /sockjs-node/ {
    proxy_pass http://host.docker.internal:3000;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
    proxy_redirect http:// https://;
  }
}
